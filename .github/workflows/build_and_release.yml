name: Build and Release Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    tags: '*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 21

      - name: Cache Gradle Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: gradle-${{ runner.os }}-

      - name: Build Application
        run: ./gradlew assemble

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 21

      - name: Run Tests
        run: ./gradlew test

  build-image:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 21

      - name: Build and Push Docker Image
        env:
          REGISTRY: ghcr.io
          IMAGE_NAME: ${{ github.repository }}
          USERNAME: ${{ github.actor }}
          TOKEN: ${{ secrets.TOKEN }}
          TAG_NAME: ${{ github.sha }}
        run: |
          ./gradlew jib -Djib.to.image="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{env.TAG_NAME}}" \
            -Djib.to.auth.username=${{ env.USERNAME }} \
            -Djib.to.auth.password=${{ env.TOKEN }}

  release:
    needs: [build, test, build-image]
    runs-on: ubuntu-latest
    if: |
      github.ref_type == 'tag'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 21

      - name: Build and Push Docker Image
        env:
          REGISTRY: ghcr.io
          IMAGE_NAME: ${{ github.repository }}
          USERNAME: ${{ github.actor }}
          TOKEN: ${{ secrets.TOKEN }}
          TAG_NAME: ${{ github.ref_name }}
        run: |
          ./gradlew jib -Djib.to.image="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{env.TAG_NAME}}" \
            -Djib.to.auth.username=${{ env.USERNAME }} \
            -Djib.to.auth.password=${{ env.TOKEN }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false